// This file was auto-generated by ML.NET Model Builder.

using System;
using System.Linq;
using Microsoft.ML;
using OutlookSpamDetectionML.Model;

namespace OutlookSpamDetectionML.ConsoleApp
{
    internal class Program
    {
        //Dataset to use for predictions
        private const string DATA_FILEPATH = @"..\..\..\..\OutlookSpamDetectionWeb\SpamCollection.txt";

        private static string MODEL_FILEPATH = @"..\..\..\..\OutlookSpamDetectionML.Model\MLModel.zip";

        private static void Main(string[] args)
        {
            bool exit = false;
            while (!exit)
            {
                Console.WriteLine();
                Console.WriteLine("1. Create Model");
                Console.WriteLine("2. Validate Model");
                Console.WriteLine("3. Exit");
                Console.Write("Enter option: ");
                int.TryParse(Console.ReadLine(), out int option);
                switch (option)
                {
                    case 1:
                        ModelBuilder.CreateModel();
                        break;

                    case 2:
                        ValidateModel(MODEL_FILEPATH);
                        break;

                    case 3:
                        exit = true;
                        break;

                    default:
                        Console.WriteLine();
                        break;
                }
            }
        }

        private static void ValidateModel(string modelPath)
        {
            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = CreateSingleDataSample(DATA_FILEPATH);

            // Make a single prediction on the sample data and print results
            var predictionResult = ConsumeModel.Predict(sampleData, modelPath);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Spam with predicted Spam from sample data...\n\n");
            Console.WriteLine($"message: {sampleData.Message}");
            Console.WriteLine($"\n\nActual Spam: {sampleData.Spam} \nPredicted Spam value {predictionResult.Prediction} \nPredicted Spam scores: [{String.Join(",", predictionResult.Score)}]\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
        }

        // Change this code to create your own sample data

        #region CreateSingleDataSample

        // Method to load single row of dataset to try a single prediction
        private static ModelInput CreateSingleDataSample(string dataFilePath)
        {
            // Create MLContext
            MLContext mlContext = new MLContext();

            // Load dataset
            IDataView dataView = mlContext.Data.LoadFromTextFile<ModelInput>(
                                            path: dataFilePath,
                                            hasHeader: true,
                                            separatorChar: '\t',
                                            allowQuoting: true,
                                            allowSparse: false);

            // Use first line of dataset as model input
            // You can replace this with new test data (hardcoded or from end-user application)
            ModelInput sampleForPrediction = mlContext.Data.CreateEnumerable<ModelInput>(dataView, false)
                                                                        .First();
            return sampleForPrediction;
        }

        #endregion CreateSingleDataSample
    }
}